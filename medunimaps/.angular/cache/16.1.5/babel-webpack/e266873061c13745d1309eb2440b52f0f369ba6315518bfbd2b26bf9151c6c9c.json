{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ApplicationMode, ApplicationModes } from '../base/applicationmode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/legacy-button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/legacy-menu\";\nfunction ModeselectorComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ModeselectorComponent_button_8_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const mode_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.modechanged(mode_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mode_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mode_r2.name);\n  }\n}\nexport let ModeselectorComponent = /*#__PURE__*/(() => {\n  class ModeselectorComponent {\n    constructor() {\n      this.modes = ApplicationModes;\n      this.currentAppMode = ApplicationMode.CreateDefault();\n      this.currentAppModeEvt = new EventEmitter();\n    }\n    ngOnInit() {}\n    modechanged(mode) {\n      console.log(\"ModeselectorComponent Mode changed: \" + mode.name);\n      this.currentAppMode = mode;\n      this.currentAppModeEvt.emit(this.currentAppMode);\n    }\n  }\n  ModeselectorComponent.ɵfac = function ModeselectorComponent_Factory(t) {\n    return new (t || ModeselectorComponent)();\n  };\n  ModeselectorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModeselectorComponent,\n    selectors: [[\"app-modeselector\"]],\n    outputs: {\n      currentAppModeEvt: \"currentAppModeEvt\"\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"modeselector\"], [\"mat-raised-button\", \"\", 1, \"modemenu\", 3, \"matMenuTriggerFor\"], [\"menuApplicationmodes\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\"]],\n    template: function ModeselectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1)(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-menu\", null, 2);\n        i0.ɵɵtemplate(8, ModeselectorComponent_button_8_Template, 2, 1, \"button\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.currentAppMode.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.modes);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.MatLegacyButton, i3.MatIcon, i4.MatLegacyMenu, i4.MatLegacyMenuItem, i4.MatLegacyMenuTrigger],\n    styles: [\".modeselector[_ngcontent-%COMP%]{position:absolute;top:1em;left:.7em;z-index:1;background-color:#ffffff80;border-radius:.5em}.modeselectormenu[_ngcontent-%COMP%]{background-color:#fff}\"]\n  });\n  return ModeselectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}