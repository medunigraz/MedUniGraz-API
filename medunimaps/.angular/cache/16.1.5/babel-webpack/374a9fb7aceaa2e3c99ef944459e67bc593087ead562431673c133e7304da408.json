{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Directive, NgModule } from '@angular/core';\nimport { MatInput } from '@angular/material/input';\nexport { MAT_INPUT_VALUE_ACCESSOR as MAT_LEGACY_INPUT_VALUE_ACCESSOR, getMatInputUnsupportedTypeError as getMatLegacyInputUnsupportedTypeError } from '@angular/material/input';\nimport { MAT_LEGACY_FORM_FIELD, MatLegacyFormFieldControl, MatLegacyFormFieldModule } from '@angular/material/legacy-form-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\n\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n * @deprecated Use `MatInput` from `@angular/material/input` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyInput = /*#__PURE__*/(() => {\n  class MatLegacyInput extends MatInput {\n    constructor() {\n      super(...arguments);\n      this._legacyFormField = inject(MAT_LEGACY_FORM_FIELD, {\n        optional: true\n      });\n    }\n    _getPlaceholder() {\n      // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n      // screen readers will read it out twice: once from the label and once from the attribute.\n      // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n      // the only one that supports promoting the placeholder to a label.\n      const formField = this._legacyFormField;\n      return formField && formField.appearance === 'legacy' && !formField._hasLabel?.() ? null : this.placeholder;\n    }\n  }\n  MatLegacyInput.ɵfac = /* @__PURE__ */function () {\n    let ɵMatLegacyInput_BaseFactory;\n    return function MatLegacyInput_Factory(t) {\n      return (ɵMatLegacyInput_BaseFactory || (ɵMatLegacyInput_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyInput)))(t || MatLegacyInput);\n    };\n  }();\n  MatLegacyInput.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLegacyInput,\n    selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n    hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"],\n    hostVars: 15,\n    hostBindings: function MatLegacyInput_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-placeholder\", ctx.placeholder);\n        i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-input-element\", false)(\"mat-mdc-form-field-textarea-control\", false)(\"mat-mdc-form-field-input-control\", false)(\"mdc-text-field__input\", false)(\"mat-mdc-native-select-inline\", false)(\"mat-native-select-inline\", ctx._isInlineSelect());\n      }\n    },\n    exportAs: [\"matInput\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatLegacyFormFieldControl,\n      useExisting: MatLegacyInput\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return MatLegacyInput;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated Use `MatInputModule` from `@angular/material/input` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyInputModule = /*#__PURE__*/(() => {\n  class MatLegacyInputModule {}\n  MatLegacyInputModule.ɵfac = function MatLegacyInputModule_Factory(t) {\n    return new (t || MatLegacyInputModule)();\n  };\n  MatLegacyInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatLegacyInputModule\n  });\n  MatLegacyInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher],\n    imports: [TextFieldModule, MatLegacyFormFieldModule, MatCommonModule, TextFieldModule,\n    // We re-export the `MatLegacyFormFieldModule` since `MatLegacyInput` will almost always\n    // be used together with `MatLegacyFormField`.\n    MatLegacyFormFieldModule]\n  });\n  return MatLegacyInputModule;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyInput, MatLegacyInputModule };\n//# sourceMappingURL=legacy-input.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}