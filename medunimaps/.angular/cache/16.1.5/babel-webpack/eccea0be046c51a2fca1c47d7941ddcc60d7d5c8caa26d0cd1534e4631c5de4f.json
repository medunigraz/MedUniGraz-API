{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MapService } from '../mapservice/map.service';\nimport { MapHttpService } from '../mapservicehttp/mapservicehttp.service';\nimport { USEHTTPSERVICE } from '../base/globalconstants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mapservicehttp/mapservicehttp.service\";\nimport * as i2 from \"../mapservice/map.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/legacy-menu\";\nfunction WeightselectComponent_div_0_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function WeightselectComponent_div_0_button_8_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const weight_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onSelect(weight_r3));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 3);\n    i0.ɵɵtext(2, \"add_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const weight_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", weight_r3.color);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(weight_r3.name);\n  }\n}\nfunction WeightselectComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2)(2, \"mat-icon\", 3);\n    i0.ɵɵtext(3, \"add_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-menu\", null, 5);\n    i0.ɵɵtemplate(8, WeightselectComponent_div_0_button_8_Template, 5, 3, \"button\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(7);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r0.selectedWeight.color);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.selectedWeight.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.weights);\n  }\n}\nexport let WeightselectComponent = /*#__PURE__*/(() => {\n  class WeightselectComponent {\n    constructor(mapServiceHttp, mapService) {\n      this.mapServiceHttp = mapServiceHttp;\n      this.mapService = mapService;\n      this.weights = null;\n      this.showControl = false;\n      this.selectedWeight = null;\n      this.currentSelectedWeightEvt = new EventEmitter();\n      this.edgeWeightsReceivedEvt = new EventEmitter();\n    }\n    ngOnInit() {\n      if (USEHTTPSERVICE) {\n        this.mapService = this.mapServiceHttp;\n      }\n      this.updateData();\n    }\n    updateData() {\n      this.mapService.getEdgeWeightTypes().subscribe(poiTypes => this.updateWeights(poiTypes), error => this.onUpdateError(error));\n    }\n    onUpdateError(error) {\n      console.log(\"ERROR deleteNode: \" + error);\n      /*\r\n      this.updateWeights([new EdgeWeight({\r\n        \"id\": 1,\r\n        \"name\": \"Standard\",\r\n        \"weight\": \"1.0\"\r\n      }),\r\n        new EdgeWeight({\r\n          \"id\": 2,\r\n          \"name\": \"Durchgang\",\r\n          \"weight\": \"2.5\"\r\n        })]);\r\n      */\n    }\n\n    onSelect(weight) {\n      this.selectWeight(weight);\n    }\n    updateWeights(weightlist) {\n      this.weights = weightlist;\n      console.log(\"WeightselectComponent::updateWeights \" + JSON.stringify(weightlist));\n      if (this.weights.length > 0) {\n        this.selectWeight(this.weights[0]);\n        this.showControl = true;\n      }\n      this.edgeWeightsReceivedEvt.emit(this.weights);\n    }\n    selectWeight(weight) {\n      this.selectedWeight = weight;\n      this.currentSelectedWeightEvt.emit(this.selectedWeight);\n    }\n  }\n  WeightselectComponent.ɵfac = function WeightselectComponent_Factory(t) {\n    return new (t || WeightselectComponent)(i0.ɵɵdirectiveInject(i1.MapHttpService), i0.ɵɵdirectiveInject(i2.MapService));\n  };\n  WeightselectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeightselectComponent,\n    selectors: [[\"app-weightselect\"]],\n    outputs: {\n      currentSelectedWeightEvt: \"currentSelectedWeightEvt\",\n      edgeWeightsReceivedEvt: \"edgeWeightsReceivedEvt\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"weightcontrol\", 4, \"ngIf\"], [1, \"weightcontrol\"], [\"mat-raised-button\", \"\", 1, \"weightcontrolIcon\", 3, \"matMenuTriggerFor\"], [1, \"weightcontrolIcon\"], [1, \"weightcontrolmenutext\"], [\"menuselectcontrol\", \"matMenu\"], [\"mat-menu-item\", \"\", \"class\", \"weightcontrolmenubutton\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 1, \"weightcontrolmenubutton\", 3, \"click\"]],\n    template: function WeightselectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WeightselectComponent_div_0_Template, 9, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showControl);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatLegacyButton, i5.MatIcon, i6.MatLegacyMenu, i6.MatLegacyMenuItem, i6.MatLegacyMenuTrigger],\n    styles: [\".weightcontrol[_ngcontent-%COMP%]{position:absolute;top:4em;left:.7em;z-index:10;background-color:#ffffff80;font-size:medium}.weightcontrolmenubutton[_ngcontent-%COMP%]{background-color:#fff;border:medium medium;box-shadow:1px 1px 1px #0003;min-width:6em;padding:0;vertical-align:middle}.weightcontrolmenutext[_ngcontent-%COMP%]{font-size:medium;margin-right:.5em}.weightcontrolIcon[_ngcontent-%COMP%]{margin-right:.2em}\"]\n  });\n  return WeightselectComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}