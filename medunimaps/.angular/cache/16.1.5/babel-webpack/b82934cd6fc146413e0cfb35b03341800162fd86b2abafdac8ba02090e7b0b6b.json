{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Directive, NgModule } from '@angular/core';\nimport { _MatMenuBase, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, matMenuAnimations, MatMenuItem, _MatMenuTriggerBase, _MatMenuContentBase, MAT_MENU_CONTENT, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/menu';\nexport { MAT_MENU_CONTENT as MAT_LEGACY_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS as MAT_LEGACY_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL as MAT_LEGACY_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY as MAT_LEGACY_MENU_SCROLL_STRATEGY, fadeInItems as fadeInLegacyItems, matMenuAnimations as matLegacyMenuAnimations, transformMenu as transformLegacyMenu } from '@angular/material/menu';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @docs-public MatMenu\n * @deprecated Use `MatMenu` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nfunction MatLegacyMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"keydown\", function MatLegacyMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatLegacyMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatLegacyMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4._onAnimationStart($event));\n    })(\"@transformMenu.done\", function MatLegacyMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n  }\n}\nconst _c0 = [\"*\"];\nconst _c1 = [\"mat-menu-item\", \"\"];\nfunction MatLegacyMenuItem__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"polygon\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nlet MatLegacyMenu = /*#__PURE__*/(() => {\n  class MatLegacyMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n      super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n      this._elevationPrefix = 'mat-elevation-z';\n      this._baseElevation = 4;\n    }\n  }\n  MatLegacyMenu.ɵfac = function MatLegacyMenu_Factory(t) {\n    return new (t || MatLegacyMenu)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  MatLegacyMenu.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatLegacyMenu,\n    selectors: [[\"mat-menu\"]],\n    hostAttrs: [\"ngSkipHydration\", \"\"],\n    hostVars: 4,\n    hostBindings: function MatLegacyMenu_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null)(\"mat-id-collision\", null);\n      }\n    },\n    exportAs: [\"matMenu\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_PANEL,\n      useExisting: MatLegacyMenu\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n    template: function MatLegacyMenu_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatLegacyMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n    encapsulation: 2,\n    data: {\n      animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n    },\n    changeDetection: 0\n  });\n  return MatLegacyMenu;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n * @deprecated Use `MatMenuItem` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyMenuItem = /*#__PURE__*/(() => {\n  class MatLegacyMenuItem extends MatMenuItem {}\n  MatLegacyMenuItem.ɵfac = /* @__PURE__ */function () {\n    let ɵMatLegacyMenuItem_BaseFactory;\n    return function MatLegacyMenuItem_Factory(t) {\n      return (ɵMatLegacyMenuItem_BaseFactory || (ɵMatLegacyMenuItem_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyMenuItem)))(t || MatLegacyMenuItem);\n    };\n  }();\n  MatLegacyMenuItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatLegacyMenuItem,\n    selectors: [[\"\", \"mat-menu-item\", \"\"]],\n    hostAttrs: [1, \"mat-focus-indicator\"],\n    hostVars: 20,\n    hostBindings: function MatLegacyMenuItem_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        i0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu)(\"mat-mdc-menu-item\", false)(\"mat-mdc-focus-indicator\", false)(\"mdc-list-item\", false)(\"mat-mdc-menu-item-highlighted\", false)(\"mat-mdc-menu-item-submenu-trigger\", false);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\"\n    },\n    exportAs: [\"matMenuItem\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatMenuItem,\n      useExisting: MatLegacyMenuItem\n    }]), i0.ɵɵInheritDefinitionFeature],\n    attrs: _c1,\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 3,\n    consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"class\", \"mat-menu-submenu-icon\", \"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n    template: function MatLegacyMenuItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelement(1, \"div\", 0);\n        i0.ɵɵtemplate(2, MatLegacyMenuItem__svg_svg_2_Template, 2, 0, \"svg\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._triggersSubmenu);\n      }\n    },\n    dependencies: [i1.NgIf, i2.MatRipple],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatLegacyMenuItem;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n * @deprecated Use `MatMenuTrigger` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyMenuTrigger = /*#__PURE__*/(() => {\n  class MatLegacyMenuTrigger extends _MatMenuTriggerBase {}\n  MatLegacyMenuTrigger.ɵfac = /* @__PURE__ */function () {\n    let ɵMatLegacyMenuTrigger_BaseFactory;\n    return function MatLegacyMenuTrigger_Factory(t) {\n      return (ɵMatLegacyMenuTrigger_BaseFactory || (ɵMatLegacyMenuTrigger_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyMenuTrigger)))(t || MatLegacyMenuTrigger);\n    };\n  }();\n  MatLegacyMenuTrigger.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLegacyMenuTrigger,\n    selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n    hostAttrs: [1, \"mat-menu-trigger\"],\n    exportAs: [\"matMenuTrigger\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return MatLegacyMenuTrigger;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n * @deprecated Use `MatMenuContent` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyMenuContent = /*#__PURE__*/(() => {\n  class MatLegacyMenuContent extends _MatMenuContentBase {}\n  MatLegacyMenuContent.ɵfac = /* @__PURE__ */function () {\n    let ɵMatLegacyMenuContent_BaseFactory;\n    return function MatLegacyMenuContent_Factory(t) {\n      return (ɵMatLegacyMenuContent_BaseFactory || (ɵMatLegacyMenuContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatLegacyMenuContent)))(t || MatLegacyMenuContent);\n    };\n  }();\n  MatLegacyMenuContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLegacyMenuContent,\n    selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_CONTENT,\n      useExisting: MatLegacyMenuContent\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return MatLegacyMenuContent;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated Use `MatMenuModule` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nlet MatLegacyMenuModule = /*#__PURE__*/(() => {\n  class MatLegacyMenuModule {}\n  MatLegacyMenuModule.ɵfac = function MatLegacyMenuModule_Factory(t) {\n    return new (t || MatLegacyMenuModule)();\n  };\n  MatLegacyMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatLegacyMenuModule\n  });\n  MatLegacyMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n  });\n  return MatLegacyMenuModule;\n})();\n/*#__PURE__*/(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyMenu, MatLegacyMenuContent, MatLegacyMenuItem, MatLegacyMenuModule, MatLegacyMenuTrigger };\n//# sourceMappingURL=legacy-menu.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}