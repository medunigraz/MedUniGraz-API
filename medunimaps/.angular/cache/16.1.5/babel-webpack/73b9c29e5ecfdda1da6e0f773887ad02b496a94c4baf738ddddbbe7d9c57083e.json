{"ast":null,"code":"const MAX_NUM_OF_ENTRIES = 30;\nconst MIN_VALUE = -90;\nexport class SignalBufferFixed {\n  constructor(id, mac, value, name, battery) {\n    //console.log(\"SignalBufferCollection::SignalBufferFixed() - Create new Beacon: \" + name + \" value: \" + value);\n    this.currentValue = undefined;\n    this.valueAr = undefined;\n    this.currentIndex = 0;\n    this.numberOfValidValues = 0;\n    this.numberOfEntries = 0;\n    this.minValue = -90;\n    this.id = id;\n    this.currentIndex = 0;\n    this.valueAr = new Array(MAX_NUM_OF_ENTRIES);\n    this.currentValue = undefined;\n    this.numberOfValidValues = 0;\n    this.name = name;\n    this.mac = mac;\n    this.battery = battery;\n    for (let i = 0; i < MAX_NUM_OF_ENTRIES; i++) {\n      this.valueAr[i] = undefined;\n    }\n    this.setValue(mac, value, name, battery);\n  }\n  setValue(mac, value, name, battery) {\n    //console.log(\"SignalBufferCollection::SignalBufferFixed() - setValue: \" + name + \" value: \" + value);\n    this.lastOrigValue = value;\n    this.currentValue = undefined;\n    if (value && value >= MIN_VALUE && value <= 0) {\n      this.battery = battery;\n      this.currentValue = value;\n    }\n  }\n  getValue() {\n    if (this.numberOfValidValues <= 0 || !this.valueAr || this.valueAr.length <= 0) {\n      //console.log(\"SignalBufferCollection::SignalBufferFixed() - getValues(): UNDEFINED\");\n      return undefined;\n    }\n    let sum = 0;\n    for (let i = 0; i < MAX_NUM_OF_ENTRIES; i++) {\n      if (this.valueAr[i] != undefined) {\n        sum += this.valueAr[i];\n      }\n    }\n    console.log(\"SignalBufferCollection::SignalBufferFixed() #\" + this.name + \"# getValues(): \" + sum / this.numberOfValidValues + \" # \" + this.numberOfValidValues);\n    return sum / this.numberOfValidValues;\n  }\n  updateTimer() {\n    if (this.currentValue) {\n      //console.log(\"SignalBufferCollection::SignalBufferFixed() - updateTimer: Insert Value: \" + this.currentValue);\n      this.addNewValue();\n      this.currentValue = undefined;\n      this.incCurrentIndex();\n    } else {\n      //console.log(\"SignalBufferCollection::SignalBufferFixed() - updateTimer: Checkvalues: \" + this.numberOfValidValues);\n      this.updateBuffer();\n      this.incCurrentIndex();\n      return this.checkClearBuffer();\n    }\n    return false;\n  }\n  addNewValue() {\n    if (this.valueAr[this.currentIndex]) {\n      this.numberOfValidValues--;\n    }\n    this.valueAr[this.currentIndex] = this.currentValue;\n    this.numberOfValidValues++;\n  }\n  updateBuffer() {\n    if (this.valueAr[this.currentIndex]) {\n      this.numberOfValidValues--;\n    }\n    this.valueAr[this.currentIndex] = undefined;\n  }\n  checkClearBuffer() {\n    if (this.numberOfValidValues <= 0) {\n      return true;\n    }\n    return false;\n  }\n  incCurrentIndex() {\n    this.currentIndex++;\n    if (this.currentIndex >= MAX_NUM_OF_ENTRIES) {\n      this.currentIndex = 0;\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}