{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BeaconEditMode, BeaconEditModes } from '../base/beaconeditmode';\nimport { MapService } from '../mapservice/map.service';\nimport { MapHttpService } from '../mapservicehttp/mapservicehttp.service';\nimport { USEHTTPSERVICE } from '../base/globalconstants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mapservicehttp/mapservicehttp.service\";\nimport * as i2 from \"../mapservice/map.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/legacy-menu\";\nfunction BeaconmodeselectorComponent_div_0_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function BeaconmodeselectorComponent_div_0_button_6_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const mode_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onSelect(mode_r3));\n    });\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mode_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mode_r3.name);\n  }\n}\nfunction BeaconmodeselectorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2)(2, \"span\", 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-menu\", null, 4);\n    i0.ɵɵtemplate(6, BeaconmodeselectorComponent_div_0_button_6_Template, 3, 1, \"button\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.selectedMode.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.modes);\n  }\n}\nexport let BeaconmodeselectorComponent = /*#__PURE__*/(() => {\n  class BeaconmodeselectorComponent {\n    constructor(mapServiceHttp, mapService) {\n      this.mapServiceHttp = mapServiceHttp;\n      this.mapService = mapService;\n      this.modes = BeaconEditModes;\n      this.showControl = true;\n      this.selectedMode = BeaconEditMode.CreateDefault();\n      this.currentSelectedModeEvt = new EventEmitter();\n    }\n    ngOnInit() {\n      if (USEHTTPSERVICE) {\n        this.mapService = this.mapServiceHttp;\n      }\n    }\n    onSelect(mode) {\n      this.selectMode(mode);\n    }\n    selectMode(mode) {\n      this.selectedMode = mode;\n      this.currentSelectedModeEvt.emit(this.selectedMode);\n    }\n  }\n  BeaconmodeselectorComponent.ɵfac = function BeaconmodeselectorComponent_Factory(t) {\n    return new (t || BeaconmodeselectorComponent)(i0.ɵɵdirectiveInject(i1.MapHttpService), i0.ɵɵdirectiveInject(i2.MapService));\n  };\n  BeaconmodeselectorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BeaconmodeselectorComponent,\n    selectors: [[\"app-beaconmodeselector\"]],\n    outputs: {\n      currentSelectedModeEvt: \"currentSelectedModeEvt\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"modecontrol\", 4, \"ngIf\"], [1, \"modecontrol\"], [\"mat-raised-button\", \"\", 1, \"modecontrolmenubutton\", 3, \"matMenuTriggerFor\"], [1, \"modecontrolmenutext\"], [\"menuselectcontrol\", \"matMenu\"], [\"mat-menu-item\", \"\", \"class\", \"modecontrolmenubutton\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 1, \"modecontrolmenubutton\", 3, \"click\"]],\n    template: function BeaconmodeselectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BeaconmodeselectorComponent_div_0_Template, 7, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showControl);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatLegacyButton, i5.MatLegacyMenu, i5.MatLegacyMenuItem, i5.MatLegacyMenuTrigger],\n    styles: [\".modecontrol[_ngcontent-%COMP%]{position:absolute;top:4em;left:.7em;z-index:10;background-color:#ffffff80;font-size:medium}.modecontrolmenubutton[_ngcontent-%COMP%]{background-color:#fff;border:medium medium;box-shadow:1px 1px 1px #0003;min-width:6em;padding:0 0 0 .5em;vertical-align:middle}.modecontrolmenutext[_ngcontent-%COMP%]{font-size:medium;margin-right:.5em}\"]\n  });\n  return BeaconmodeselectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}