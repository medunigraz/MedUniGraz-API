{"ast":null,"code":"import { MatLegacyDialog as MatDialog, MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\nimport { ApplicationMode, ApplicationModeT } from './base/applicationmode';\nimport { Floor } from './base/floor';\nimport { BeaconEditMode } from './base/beaconeditmode';\nimport { OAuthService, NullValidationHandler } from 'angular-oauth2-oidc';\nimport { BeaconinfoComponent } from './beaconinfo/beaconinfo.component';\nimport { auth } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-dialog\";\nimport * as i2 from \"angular-oauth2-oidc\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./floorselector/floorselector.component\";\nimport * as i5 from \"./modeselector/modeselector.component\";\nimport * as i6 from \"./editablemap/editablemap.component\";\nimport * as i7 from \"./poiselector/poiselector.component\";\nimport * as i8 from \"./beaconmodeselector/beaconmodeselector.component\";\nimport * as i9 from \"./beaconconnector/beaconconnector.component\";\nimport * as i10 from \"./beaconinfo/beaconinfo.component\";\nimport * as i11 from \"./weightselect/weightselect.component\";\nimport * as i12 from \"@angular/material/legacy-button\";\nconst _c0 = [\"beaconInfoComp\"];\nfunction AppComponent_app_poiselector_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-poiselector\", 9);\n    i0.ɵɵlistener(\"currentSelectedPoiEvt\", function AppComponent_app_poiselector_4_Template_app_poiselector_currentSelectedPoiEvt_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.currentPoiTypeChanged($event));\n    })(\"poiTypeReceivedEvt\", function AppComponent_app_poiselector_4_Template_app_poiselector_poiTypeReceivedEvt_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.PoiTypesReceived($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_app_weightselect_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-weightselect\", 10);\n    i0.ɵɵlistener(\"currentSelectedWeightEvt\", function AppComponent_app_weightselect_5_Template_app_weightselect_currentSelectedWeightEvt_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.edgeWeightChanged($event));\n    })(\"edgeWeightsReceivedEvt\", function AppComponent_app_weightselect_5_Template_app_weightselect_edgeWeightsReceivedEvt_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.edgeWeightsReceived($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_app_beaconmodeselector_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-beaconmodeselector\", 11);\n    i0.ɵɵlistener(\"currentSelectedModeEvt\", function AppComponent_app_beaconmodeselector_6_Template_app_beaconmodeselector_currentSelectedModeEvt_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.beaconEditModeChanged($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_app_beaconinfo_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-beaconinfo\", 12, 13);\n    i0.ɵɵlistener(\"deleteBeaconEvent\", function AppComponent_app_beaconinfo_7_Template_app_beaconinfo_deleteBeaconEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deleteBeacon($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(_dialog, oauthService) {\n      // Login-Url\n      //this.oauthService.loginUrl = \"https://api.medunigraz.at/oauth2/authorize/\"; //Id-Provider?\n      //this.oauthService.loginUrl = \"https://api.medunigraz.at/oauth2/authorize/\";\n      //this.oauthService.loginUrl = \"https://api.medunigraz.at:8088/oauth2/authorize/\";\n      this._dialog = _dialog;\n      this.oauthService = oauthService;\n      this.currentAppMode = ApplicationMode.CreateDefault();\n      this.currentFloor = Floor.getDefaultFloor();\n      this.currentPoiType = null;\n      this.poiTypes = null;\n      this.beaconEditMode = null;\n      this.beaconSignals = null;\n      this.edgeWeights = null;\n      this.currentEdgeWeight = null;\n      this.showPoiSelector = false;\n      this.showEdgeWeightSelector = false;\n      this.showBeaconEditModeSelector = false;\n      this.beaconToDelete = null;\n      // URL of the SPA to redirect the user to after login\n      //this.oauthService.redirectUri = window.location.origin + \"/mapeditor/\";\n      //this.oauthService.redirectUri = window.location.href;\n      //this.oauthService.redirectUri = window.location.origin + \"/editor/\";\n      //if (window.location.origin.indexOf('localhost') >= 0) {\n      //  this.oauthService.redirectUri = window.location.origin;\n      //}\n      /*\n      console.log(\"AppComponent::constructor \" + this.oauthService.redirectUri);\n       \n      // The SPA's id. Register SPA with this id at the auth-server\n      this.oauthService.clientId = \"o5AMvJLFuKNhKzBltNK1d0DDyP53h5Ng2gxVBT7p\";\n      // set the scope for the permissions the client should request\n      this.oauthService.scope = \"editor\";\n           // set to true, to receive also an id_token via OpenId Connect (OIDC) in addition to the\n      // OAuth2-based access_token\n      this.oauthService.oidc = false;\n           // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n      // instead of localStorage\n      this.oauthService.setStorage(sessionStorage);\n           // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n      //this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession?id_token={{id_token}}\";\n           // This method just tries to parse the token(s) within the url when\n      // the auth-server redirects the user back to the web-app\n      // It dosn't send the user the the login page\n      this.oauthService.tryLogin({});\n           if (!this.oauthService.hasValidAccessToken()) {\n        this.oauthService.initImplicitFlow();\n      }*/\n      this.oauthService.configure(auth);\n      this.oauthService.tokenValidationHandler = new NullValidationHandler();\n      //this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.tryLogin({});\n      if (!this.oauthService.hasValidAccessToken()) {\n        this.oauthService.initImplicitFlow();\n      }\n    }\n    ngOnInit() {\n      /*\n      angular.module('myApp', ['ngMaterial'])\n        .config(function($mdThemingProvider) {\n          $mdThemingProvider.theme('altTheme')\n            .primaryPalette('purple') // specify primary color, all\n          // other color intentions will be inherited\n          // from default\n        });*/\n    }\n    openDialog() {\n      let dialogRef = this._dialog.open(DialogContent);\n      dialogRef.afterClosed().subscribe(result => {\n        this.lastDialogResult = result;\n      });\n    }\n    sayHi() {\n      console.info(\"Hi\");\n    }\n    appModeChanged(mode) {\n      console.log(\"AppComponent --- appModeChanged: \" + mode.name);\n      this.currentAppMode = mode;\n      this.showPoiSelector = this.currentAppMode.mode == ApplicationModeT.EDIT_POIS;\n      this.showBeaconEditModeSelector = this.currentAppMode.mode == ApplicationModeT.EDIT_BEACONS;\n      this.showEdgeWeightSelector = this.currentAppMode.mode == ApplicationModeT.EDIT_WEIGHTS;\n    }\n    floorChanged(floor) {\n      if (floor) {\n        console.log(\"AppComponent --- floorChanged: \" + floor.name);\n        this.currentFloor = floor;\n      }\n    }\n    currentPoiTypeChanged(poiType) {\n      if (poiType) {\n        console.log(\"AppComponent --- currentPoiType: \" + poiType.name);\n        this.currentPoiType = poiType;\n      }\n    }\n    PoiTypesReceived(poiTypes) {\n      if (poiTypes) {\n        console.log(\"AppComponent --- PoiTypesReceived: \" + poiTypes.length);\n        this.poiTypes = poiTypes;\n      }\n    }\n    beaconEditModeChanged(mode) {\n      if (mode) {\n        console.log(\"AppComponent --- BeaconEditMode: \" + mode.name);\n        this.beaconEditMode = mode;\n      }\n    }\n    beaconSignalsChanged(signal) {\n      if (signal) {\n        //console.log(\"AppComponent --- beaconSignalsChanged: \" + JSON.stringify(signal));\n        this.beaconSignals = signal;\n      }\n    }\n    selectedBeaconChanged(beacon) {\n      //console.log(\"AppComponent --- selectedBeaconChanged: \" + JSON.stringify(beacon));\n      if (this.beaconInfoComponent) {\n        this.beaconInfoComponent.setSelectedBeacon(beacon);\n      }\n    }\n    deleteBeacon(beacon) {\n      console.log(\"AppComponent --- deleteBeacon: \" + JSON.stringify(beacon));\n      if (beacon) {\n        this.beaconToDelete = beacon;\n      }\n    }\n    edgeWeightChanged(edgeWeight) {\n      if (edgeWeight) {\n        console.log(\"AppComponent --- edgeWeightChanged: \" + JSON.stringify(edgeWeight));\n        this.currentEdgeWeight = edgeWeight;\n      }\n    }\n    edgeWeightsReceived(edgeWeights) {\n      if (edgeWeights) {\n        console.log(\"AppComponent --- edgeWeightsReceived: \" + edgeWeights.length);\n        this.edgeWeights = edgeWeights;\n      }\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialog), i0.ɵɵdirectiveInject(i2.OAuthService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.beaconInfoComponent = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 13,\n    consts: [[3, \"applicationMode\", \"currentFloor\", \"poiTypes\", \"currentPoiType\", \"beaconEditMode\", \"setBeaconSignals\", \"deleteBeacon\", \"edgeWeights\", \"currentEdgeWeight\", \"selectedBeaconEvt\"], [\"mapComp\", \"\"], [3, \"currentFloorEvt\"], [3, \"currentAppModeEvt\"], [3, \"currentSelectedPoiEvt\", \"poiTypeReceivedEvt\", 4, \"ngIf\"], [3, \"currentSelectedWeightEvt\", \"edgeWeightsReceivedEvt\", 4, \"ngIf\"], [3, \"currentSelectedModeEvt\", 4, \"ngIf\"], [3, \"deleteBeaconEvent\", 4, \"ngIf\"], [3, \"updateSignalsEvent\"], [3, \"currentSelectedPoiEvt\", \"poiTypeReceivedEvt\"], [3, \"currentSelectedWeightEvt\", \"edgeWeightsReceivedEvt\"], [3, \"currentSelectedModeEvt\"], [3, \"deleteBeaconEvent\"], [\"beaconInfoComp\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-editablemap\", 0, 1);\n        i0.ɵɵlistener(\"selectedBeaconEvt\", function AppComponent_Template_app_editablemap_selectedBeaconEvt_0_listener($event) {\n          return ctx.selectedBeaconChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"app-floorselector\", 2);\n        i0.ɵɵlistener(\"currentFloorEvt\", function AppComponent_Template_app_floorselector_currentFloorEvt_2_listener($event) {\n          return ctx.floorChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"app-modeselector\", 3);\n        i0.ɵɵlistener(\"currentAppModeEvt\", function AppComponent_Template_app_modeselector_currentAppModeEvt_3_listener($event) {\n          return ctx.appModeChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AppComponent_app_poiselector_4_Template, 1, 0, \"app-poiselector\", 4);\n        i0.ɵɵtemplate(5, AppComponent_app_weightselect_5_Template, 1, 0, \"app-weightselect\", 5);\n        i0.ɵɵtemplate(6, AppComponent_app_beaconmodeselector_6_Template, 1, 0, \"app-beaconmodeselector\", 6);\n        i0.ɵɵtemplate(7, AppComponent_app_beaconinfo_7_Template, 2, 0, \"app-beaconinfo\", 7);\n        i0.ɵɵelementStart(8, \"app-beaconconnector\", 8);\n        i0.ɵɵlistener(\"updateSignalsEvent\", function AppComponent_Template_app_beaconconnector_updateSignalsEvent_8_listener($event) {\n          return ctx.beaconSignalsChanged($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"applicationMode\", ctx.currentAppMode)(\"currentFloor\", ctx.currentFloor)(\"poiTypes\", ctx.poiTypes)(\"currentPoiType\", ctx.currentPoiType)(\"beaconEditMode\", ctx.beaconEditMode)(\"setBeaconSignals\", ctx.beaconSignals)(\"deleteBeacon\", ctx.beaconToDelete)(\"edgeWeights\", ctx.edgeWeights)(\"currentEdgeWeight\", ctx.currentEdgeWeight);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPoiSelector);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showEdgeWeightSelector);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showBeaconEditModeSelector);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showBeaconEditModeSelector);\n      }\n    },\n    dependencies: [i3.NgIf, i4.FloorselectorComponent, i5.ModeselectorComponent, i6.EditablemapComponent, i7.PoiselectorComponent, i8.BeaconmodeselectorComponent, i9.BeaconconnectorComponent, i10.BeaconinfoComponent, i11.WeightselectComponent],\n    styles: [\".app-toolbar-filler[_ngcontent-%COMP%]{flex:1 1 auto;height:3em}.header-toolbar[_ngcontent-%COMP%]{position:absolute;inset:0;background-color:#51ae32;color:#fff;height:3em;margin:0;z-index:1}\"]\n  });\n  return AppComponent;\n})();\nexport let DialogContent = /*#__PURE__*/(() => {\n  class DialogContent {\n    constructor(dialogRef) {\n      this.dialogRef = dialogRef;\n    }\n  }\n  DialogContent.ɵfac = function DialogContent_Factory(t) {\n    return new (t || DialogContent)(i0.ɵɵdirectiveInject(i1.MatLegacyDialogRef, 8));\n  };\n  DialogContent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogContent,\n    selectors: [[\"ng-component\"]],\n    decls: 10,\n    vars: 0,\n    consts: [[\"dialogInput\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function DialogContent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"This is a dialog\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\")(3, \"label\");\n        i0.ɵɵtext(4, \" This is a text box inside of a dialog. \");\n        i0.ɵɵelement(5, \"input\", null, 0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"p\")(8, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DialogContent_Template_button_click_8_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.dialogRef.close(_r0.value));\n        });\n        i0.ɵɵtext(9, \"CLOSE\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i12.MatLegacyButton],\n    encapsulation: 2\n  });\n  return DialogContent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}