{"ast":null,"code":"import { OpenlayersHelper } from './openlayershelper';\nimport { MapLayerBase } from './mapLayerBase';\nimport ol_style_Style from 'ol/style/Style';\nimport ol_format_GeoJSON from 'ol/format/GeoJSON';\nimport ol_style_Fill from 'ol/style/Fill';\nexport class MapDoors extends MapLayerBase {\n  constructor(mapService) {\n    super();\n    this.mapService = mapService;\n    this.Initialize();\n  }\n  Initialize() {\n    let res = OpenlayersHelper.CreateBasicLayer(new ol_style_Style({\n      fill: new ol_style_Fill({\n        color: 'rgba(212, 209, 203,1.0)'\n      })\n    }));\n    res.layer.set('maxResolution', 0.2);\n    this.layerSource = res.layerSource;\n    this.layer = res.layer;\n  }\n  updateData(floorId) {\n    console.log(\"MapDoors::showFloor - \" + floorId);\n    //this.layerSource.addFeatures((new ol.format.GeoJSON()).readFeatures(this.getDummyDoors()));\n    //TODO: fÃ¼r AlLE!\n    //Observable\n    this.clear();\n    this.subscribeNewRequest(this.mapService.getDoors(floorId).subscribe(doors => this.showDoors(doors), error => console.log(\"ERROR deleteNode: \" + error)));\n  }\n  showDoors(features) {\n    console.log(\"MapDoors::showDoors\");\n    this.clear();\n    this.layerSource.addFeatures(new ol_format_GeoJSON().readFeatures(features));\n  }\n  getDummyDoors() {\n    return {\n      \"type\": \"FeatureCollection\",\n      \"features\": [{\n        'type': 'Feature',\n        \"id\": 12,\n        'geometry': {\n          \"type\": \"Polygon\",\n          \"coordinates\": [[[1722150.9832473625, 5955259.831606609], [1722152.513480839, 5955262.780105258], [1722153.8944232445, 5955262.406877581], [1722152.924031284, 5955260.727353034], [1722150.9832473625, 5955259.831606609]]]\n        },\n        \"properties\": {}\n      }]\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}